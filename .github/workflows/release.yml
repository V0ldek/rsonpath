name: Release

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Version bump level'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major 

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    name: Build matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          #- os: ubuntu-latest
          #  triple: aarch64-unknown-linux-gnu
          #  target-features: ''
          #  artifact-suffix: 'nosimd'
          - os: ubuntu-latest
            triple: i686-unknown-linux-gnu
            target-features: '+avx2,+pclmulqdq'
            artifact-suffix: 'avx2-pclmulqdq'
          - os: ubuntu-latest
            triple: x86_64-unknown-linux-gnu
            target-features: '+avx2,+pclmulqdq'
            artifact-suffix: 'avx2-pclmulqdq'
          - os: macos-latest
            triple: x86_64-apple-darwin
            target-features: '+avx2,+pclmulqdq'
            artifact-suffix: 'avx2-pclmulqdq'
          - os: windows-latest
            triple: i686-pc-windows-gnu
            target-features: '+avx2,+pclmulqdq'
            artifact-suffix: 'avx2-pclmulqdq'
          - os: windows-latest
            triple: i686-pc-windows-msvc
            target-features: '+avx2,+pclmulqdq'
            artifact-suffix: 'avx2-pclmulqdq'
          - os: windows-latest
            triple: x86_64-pc-windows-gnu
            target-features: '+avx2,+pclmulqdq'
            artifact-suffix: 'avx2-pclmulqdq'
          - os: windows-latest
            triple: x86_64-pc-windows-msvc
            target-features: '+avx2,+pclmulqdq'
            artifact-suffix: 'avx2-pclmulqdq'
    steps:
    - uses: actions/checkout@v3
    - name: Rustup ${{ matrix.triple }} toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.triple }}
        components: rustfmt
        override: true
        default: true
    - name: Cache restore
      id: cache-restore
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-${{ matrix.triple }}-${{ matrix.artifact-suffix }}-cargo-${{ hashFiles('**/Cargo.toml') }}-release
    - name: Build release without simd
      if: matrix.target-features == ''
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --package rsonpath --release --no-default-features
      env:
        RUSTFLAGS: "--deny warnings"
    - name: Build release with target-feature=${{ matrix.target-features }}
      if: matrix.target-features != ''
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --package rsonpath --release
      env:
        RUSTFLAGS: "-C target-feature=${{ matrix.target-features }} --deny warnings"
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: rsonpath-${{ matrix.triple }}-${{ matrix.artifact-suffix }}
        # A file, directory or wildcard pattern that describes what to upload
        path: target/release/rsonpath
        if-no-files-found: error
