name: ClusterFuzzLite batch fuzzing
on:
  workflow_dispatch:
    inputs:
      fuzz-seconds:
        description: 'Total time to fuzz, in seconds'
        required: true
        default: '3600'
        type: string
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: read

jobs:
  BatchFuzzing:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitizer:
        - address
    steps:
    - name: Build Fuzzers (${{ matrix.sanitizer }})
      id: build
      uses: google/clusterfuzzlite/actions/build_fuzzers@884713a6c30a92e5e8544c39945cd7cb630abcd1 # v1
      with:
        language: rust
        sanitizer: ${{ matrix.sanitizer }}
    - name: Run Fuzzers (${{ matrix.sanitizer }})
      id: run
      uses: google/clusterfuzzlite/actions/run_fuzzers@884713a6c30a92e5e8544c39945cd7cb630abcd1 # v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        fuzz-seconds: ${{ inputs.fuzz-seconds || '3600' }}
        mode: 'batch'
        sanitizer: ${{ matrix.sanitizer }}
        output-sarif: true
        storage-repo: https://${{ secrets.CLUSTERFUZZLITE_STORAGE_TOKEN }}@github.com/rsonquery/rsonpath-fuzz-storage.git

  ReportCrash:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    needs: BatchFuzzing
    if: ${{ always() && needs.BatchFuzzing.result == 'failure' }}
    steps:
    - name: Report crash
      id: report
      uses: JasonEtco/create-an-issue@v2
      with:
        filename: .github/internal_templates/fuzz_failure.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RUN_ID: ${{ github.run_id }}
        storage-repo-branch: main
        storage-repo-branch-coverage: gh-pages
