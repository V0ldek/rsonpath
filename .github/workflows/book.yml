# Simple workflow for deploying static content to GitHub Pages
name: Deploy rsonbook to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            crates.io:443
            index.crates.io:443
            static.crates.io:443
            static.rust-lang.org:443

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: true
      - name: Install Rust toolchain (${{ matrix.toolchain }})
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # master
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
      - name: Override toolchain
        run: rustup override set stable
      - name: Cache restore (Cargo)
        id: cache-restore-cargo
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: book-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install mdbook
        if: steps.cache-restore-cargo.outputs.cache-hit != 'true'
        run: cargo install mdbook mdbook-katex
        env:
          CARGO_TARGET_DIR: target/
      - name: Build the book
        run: mdbook build ./book
      - name: Setup Pages
        uses: actions/configure-pages@1f0c5cde4bc74cd7e1254d0cb4de8d49e9068c7d # v4.0.0
      - name: Upload artifact
        uses: actions/upload-pages-artifact@0252fc4ba7626f0298f0cf00902a25c6afc77fa8 # v3.0.0
        with:
          path: "./book/wwwroot"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@7a9bd943aa5e5175aeb8502edcc6c1c02d398e10 # v4.0.2
