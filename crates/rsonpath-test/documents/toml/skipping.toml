[input]
description = "artificial json with an object with many leaves preceding an atomic member, designed to stress test tail-skipping"
is_compressed = false

[input.source]
json_string = '''
{
    "a": {
        "c": {
            "a01": "some value",
            "a02": "some value",
            "a03": "some value",
            "a04": "some value",
            "a05": "some value",
            "a06": "some value",
            "a07": "some value",
            "a08": "some value",
            "a09": "some value",
            "a10": "some value",
            "a11": "some value",
            "a12": "some value",
            "a13": "some value",
            "a14": "some value",
            "a15": "some value",
            "a16": "some value",
            "a17": "some value",
            "a18": "some value",
            "a19": "some value",
            "a20": "some value",
            "a21": "some value",
            "a22": "some value",
            "a23": "some value"
        },
        "b": 42
    }
}
'''

[[queries]]
query = "$.a.b"
description = "look for the atomic value, forcing a tail-skip of the large object"

[queries.results]
count = 1
spans = [[810, 812]]
nodes = ["42"]

[[queries]]
query = "$..b"
description = "look for the atomic value with descendant, forcing memchr"

[queries.results]
count = 1
spans = [[810, 812]]
nodes = ["42"]