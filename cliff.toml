# configuration file for git-cliff (0.1.0)

[changelog]
# changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | trim_start_matches(pat="1") | trim_start_matches(pat="2") | trim_start_matches(pat="3") | trim_start_matches(pat="4") | trim_start_matches(pat="5") | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }}. \
            {% if commit.links %}\
                (\
                {% for link in commit.links %}\
                    [{{ link.text }}]({{ link.href }})\
                {% endfor %})
            {% endif %}
            {% if commit.body %}\
                {% for message in commit.body | split(pat="\n\n") %}\
                  {% if message %}  - {{ message | trim | trim_start_matches(pat="-") | trim_start_matches(pat="*") }}
                  {% endif %}\
                {% endfor %}\
            {% endif %}\
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat", group = "1Features"},
    { message = "^fix", group = "2Bug Fixes"},
    { message = "^perf", group = "3Performance"},
    { message = "^test", group = "4Reliability"},
    { message = "^ci", group = "4Reliability"},
    { message = "^lib", group = "4Reliability"},
    { message = "^dep", group = "5Dependencies"},
    { message = "^deps", group = "5Dependencies"},
    { message = "^docs", group = "5Documentation"},
    { message = "^doc", group = "5Documentation"},
]
# filter out the commits that are not matched by commit parsers
filter_commits = true
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags chronologically
date_order = true
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
# An array of link parsers for extracting external references, and turning them into URLs, using regex.
link_parsers = [
    { pattern = "#(\\d+)", href = "https://github.com/V0ldek/rsonpath/issues/$1" }
]
